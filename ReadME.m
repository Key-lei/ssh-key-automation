# SSH密钥自动化部署工具

## 功能概述

本工具提供了一个用户友好的界面，用于自动化完成SSH密钥的生成、部署和验证过程。主要功能包括：

1. **环境检测**：
   - Python版本检查
   - 依赖包完整性检查
   - SSH目录权限检查

2. **密钥管理**：
   - 使用系统ssh-keygen生成RSA密钥对
   - 自动设置正确的文件权限
   - 支持密钥备份和恢复

3. **远程部署**：
   - 自动创建远程服务器.ssh目录
   - 设置正确的目录和文件权限
   - 处理SELinux安全上下文
   - 备份现有的authorized_keys文件

4. **连接验证**：
   - TCP连接测试
   - SSH密钥认证测试
   - 详细的错误报告

## 系统要求

### Windows系统
- Python 3.6+
- OpenSSH客户端（Windows 10 1809+默认已安装）
- 管理员权限（用于设置密钥权限）

### Mac/Linux系统
- Python 3.6+
- OpenSSH（系统自带）
- 适当的用户权限

## 安装步骤

1. **安装依赖**：
```bash
pip install -r requirements.txt
```

依赖包括：
- paramiko>=2.12.0
- cryptography>=41.0.0
- bcrypt>=4.0.1

2. **权限设置**：

Windows系统：
```powershell
# 以管理员身份运行PowerShell
```

Mac/Linux系统：
```bash
chmod +x ssh_automation.py
```

## 使用方法

1. **启动程序**：
```bash
python ssh_automation.py
```

2. **主菜单选项**：
   - 1: 检测环境配置
   - 2: 测试远程连接
   - 3: 部署SSH密钥
   - 4: 检查远程服务器配置
   - 5: 查看当前配置
   - 6: 修改配置
   - 0: 退出程序

3. **推荐使用流程**：
   1. 先运行环境检测
   2. 更新连接配置
   3. 测试远程连接
   4. 部署SSH密钥
   5. 验证部署结果

## 配置说明

配置文件 `config.py` 包含以下设置：

1. **SSH连接配置**：
```python
SSH_CONFIG = {
    'remote_host': '',  # 远程服务器IP或域名
    'remote_port': 22,  # SSH端口号
    'username': '',     # 用户名
    'password': ''      # 密码
}
```

2. **密钥配置**：
```python
KEY_CONFIG = {
    'key_filename': 'id_rsa',  # 密钥文件名
    'key_type': 'rsa',        # 密钥类型
    'key_bits': 4096,         # 密钥位数
    'key_comment': ''         # 密钥注释
}
```

## 故障排除

1. **权限问题**：
   - 确保.ssh目录权限为700
   - 确保私钥文件权限为600
   - 确保公钥文件权限为644
   - 确保authorized_keys文件权限为600

2. **连接失败**：
   - 检查网络连接
   - 验证服务器地址和端口
   - 确认用户名和密码正确
   - 检查服务器SSH配置

3. **SELinux相关**：
   - 检查SELinux状态
   - 确保SSH目录有正确的安全上下文

4. **密钥验证失败**：
   - 检查authorized_keys文件内容
   - 验证私钥权限
   - 查看服务器SSH日志

## 安全建议

1. **密钥管理**：
   - 定期更换SSH密钥
   - 安全保管私钥文件
   - 及时删除不再使用的密钥

2. **服务器配置**：
   - 建议禁用密码认证
   - 使用非标准SSH端口
   - 限制root用户SSH访问

3. **权限控制**：
   - 严格控制.ssh目录权限
   - 定期审查authorized_keys
   - 及时撤销未使用的访问权限

## 日志说明

程序运行日志包含以下信息：
- 环境检查结果
- 连接测试详情
- 密钥操作记录
- 错误和警告信息

日志格式：
```
时间戳 - 日志级别 - 消息内容
```

## 技术支持

如遇问题，请：
1. 查看详细的错误日志
2. 检查系统环境配置
3. 验证网络连接状态
4. 确认服务器SSH配置

## 注意事项

1. **备份**：
   - 部署前自动备份authorized_keys
   - 建议手动备份重要的SSH配置

2. **兼容性**：
   - 支持OpenSSH 7.0及以上版本
   - 适配Windows/Mac/Linux系统

3. **网络要求**：
   - 确保能够访问目标服务器
   - SSH端口(默认22)可访问
   - 网络延迟在可接受范围内
